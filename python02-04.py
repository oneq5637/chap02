# -*- coding: utf-8 -*-
#파이썬 사용시 한글이 깨지거나 혹은 ascii 문자 오류가 발생했을 경우 파일의 첫라인에 입력

#p.79 
#튜플
#리스트와 거의 동일한 기능을 하는 자료형
#튜플은 지정한 값을 변경할 수 없음
#리스트는 [] 사용하지만 튜플은 ()를 사용함
#튜플은 값을 1개만 사용 시 끝에 ,를 붙임
#튜플은 일종의 상수형태의 리스트를 사용한다고 생각하면 됨

print("튜플 사용하기")
t1 = (0)
t2 = (1,)
t3 = (1,2,3)
t4 = 1,2,3
t5 = 1,
t6 = ('a', 'b',('ab','cd'))

#값이 1개만 있어도 끝에 ,를 붙이는 이유가 괄호가 없는 형태로 튜플로 데이터를 입력할 수 있기 때문에 단순 숫자형 변수를 입력하는 것과 튜플을 입력하는 것을 구분하기 위함
print("빈 튜플 : {0}" .format(t1))
print("값이 1개인 튜플 : {0}" .format(t2))
print("값이 3개인 튜플 : {0}" .format(t3))
print("괄호를 쓰지 않은 유플: {0}" .format(t4))
print("괄호가 없고 값이 1개인 튜플 : {0}" .format(t5))
print("튜플 안의 튜플 : {0}" .format(t6))
#빈 튜플 : 0
#값이 1개인 튜플 : (1,)
#값이 3개인 튜플 : (1, 2, 3)
#괄호를 쓰지 않은 유플: (1, 2, 3)
#괄호가 없고 값이 1개인 튜플 : (1,)
#튜플 안의 튜플 : ('a', 'b', ('ab', 'cd'))

#튜플의 값을 수정하거나 삭제할 때 오류 발생
print()
t1 = (1,2,'a','b')
#del t1[0]
#t1[0] = 10

#튜플 연산하기 +,*
#튜플은 수정 및 삭제는 불가능하지만 튜플을 추가하거나 곱연산은 가능함
#튜플은 리스트와 같이 인덱싱과 슬라이싱을 지원함
t1 = (1,2,'a','b')
print("튜플 인덱싱하기 : {0}".format(t1[-1]))
print("튜플 슬라이싱하기 : {0}".format(t1[:3]))
#튜플 인덱싱하기 : b
#튜플 슬라이싱하기 : (1, 2, 'a')

print()
t2 = (3,4)
print("튜플 + 연산하기 {0}".format(t1+t2))
print("튜플 + 곱연산하기 {0}".format(t1*3))
#튜플 + 연산하기 (1, 2, 'a', 'b', 3, 4)
#튜플 + 곱연산하기 (1, 2, 'a', 'b', 1, 2, 'a', 'b', 1, 2, 'a', 'b')





